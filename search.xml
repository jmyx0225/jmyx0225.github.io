<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CentOS配置本地源</title>
      <link href="/2024/11/05/%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E6%BA%90/"/>
      <url>/2024/11/05/%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<p>清除原有源<br>yum clean all<br>找到挂载的驱动器<br>df -h<br>创建挂载点<br>mkdir /mnt/iso<br>挂载<br>mount /dev/sr0 /mnt/iso<br>备份原有 <code>yum</code> 源文件<br>mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak<br>创建本地仓库文件vi /etc/yum.repos.d/local.repo</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="built_in">local</span>]</span><br><span class="line">name=Local Repository</span><br><span class="line">baseurl=file:///mnt/iso</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure><p>sudo yum clean all<br>sudo yum makecache<br>sudo yum update</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vim快捷键及使用</title>
      <link href="/2024/11/05/vim%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/11/05/vim%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="快捷键-待整理"><a href="#快捷键-待整理" class="headerlink" title="快捷键(待整理)"></a>快捷键(待整理)</h4><h5 id="基础快捷键"><a href="#基础快捷键" class="headerlink" title="基础快捷键"></a>基础快捷键</h5><ul><li><p>基本命令</p><ul><li><code>i, I</code> 进入输入模式(Insert mode)： i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。</li><li><code>a, A</code> 进入输入模式(Insert mode)： a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。</li><li><code>o, O</code> 进入输入模式(Insert mode)： 这是英文字母 o 的大小写。o 为『在目前光标所在的下一行处输入新的一行』； O 为在目前光标所在处的上一行输入新的一行！</li><li><code>r, R</code> 进入取代模式(Replace mode)： r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；</li><li><code>u</code> 复原前一个动作。</li><li><code>Ctrl+r</code> 重做上一个动作。</li><li><code>.</code> 重复前一个动作的意思</li></ul></li><li><p>翻页</p><ul><li>Ctrl+f 屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)</li><li>Ctrl+b 屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)</li><li>Ctrl+d 屏幕『向下』移动半页</li><li>Ctrl + u 屏幕『向上』移动半页</li></ul></li><li><p>光标移动</p><ul><li><code>h</code>：左移光标。</li><li><code>j</code>：向下移动光标。</li><li><code>k</code>：向上移动光标。</li><li><code>l</code>：右移光标。</li><li><code>0</code>：移动到行首。</li><li><code>^</code>：移动到本行第一个非空字符。</li><li><code>$</code>：移动到行尾。</li><li><code>gg</code>：移动到文件首行。</li><li><code>G</code>：移动到文件末行。</li><li><code>w</code>：移动到下一个单词的开头。</li><li><code>b</code>：移动到前一个单词的开头。</li><li><code>e</code>：移动到当前单词的结尾。<code>+</code> 光标移动到非空格符的下一行</li><li><code>-</code> 光标移动到非空格符的上一行</li><li><code>n &lt; space &gt;</code> 按下n(数字)后再按空格键，光标会向右移动这一行的 n 个字符。</li><li><code>H</code>：移动到屏幕顶部。</li><li><code>M</code> 光标移动到这个屏幕的中央那一行的第一个字符</li><li><code>L</code> 光标移动到这个屏幕的最下方那一行的第一个字符</li><li><code>G</code> 移动到这个档案的最后一行(常用)</li><li><code>nG</code> n 为数字。移动到这个档案的第 n 行。(配合 :set nu)</li><li><code>n&lt; Enter &gt;</code> n 为数字。光标向下移动 n 行</li></ul></li><li><p>文档查询替换</p><ul><li><p>查找：</p><ul><li><code>/word</code> 向光标之下寻找一个名称为 word 的字符串。</li><li><code>?word</code> 向光标之上寻找一个字符串名称为 word 的字符串。</li><li><code>n</code> 代表重复前一个搜寻的动作。</li><li><code>N</code> 与 n 刚好相反，为『反向』进行前一个搜寻动作。 </li></ul></li><li><p>替换：</p><ul><li><code>:n1,n2s/word1/word2/g</code> n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 </li><li><code>:1,$s/word1/word2/g 或 :%s/word1/word2/g</code> 从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！</li><li><code>:1,$s/word1/word2/gc 或 :%s/word1/word2/gc</code> 替换整个文件所有的 <code>word1</code>为 <code>word2</code>，每次替换时确认。</li></ul></li></ul></li><li><p>编辑文本</p><ul><li><p><code>x, X</code> 在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符( 相当于 [backspace] 亦即是退格键)</p></li><li><p><code>nx</code> n 为数字，连续向后删除 n 个字符。</p></li></ul><ul><li><code>dd</code> 删除游标所在的那一整行</li><li><code>ndd</code> n 为数字。删除光标所在的向下 n 行</li><li><code>d1G</code> 删除光标所在到第一行的所有数据</li><li><code>dG</code> 删除光标所在到最后一行的所有数据</li><li><code>dw</code>：删除从光标到单词结尾的内容。</li><li><code>d$</code> 删除游标所在处，到该行的最后一个字符</li><li><code>d0</code> 删除游标所在处，到该行的最前面一个字符</li><li><code>D</code>：删除从光标到行尾的所有内容。</li><li><code>yy</code> 复制游标所在的那一行</li><li><code>yw</code> 就是复制一个单词(word)</li><li><code>y+n</code> 复制n行</li><li><code>nyy</code> n 为数字。复制光标所在的向下 n 行</li><li><code>y1G</code> 复制游标所在行到第一行的所有数据</li><li><code>yG</code> 复制游标所在行到最后一行的所有数据</li><li><code>y0</code> 复制光标所在的那个字符到该行行首的所有数据</li><li><code>y$</code> 复制光标所在的那个字符到该行行尾的所有数据</li><li><code>p, P</code> p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！</li><li><code>J</code> 将光标所在行与下一行的数据结合成同一行</li><li><code>c</code> 重复删除多个数据，例如向下删除 10 行，[ 10cj ]</li><li><code>cw</code>：删除从光标到单词结尾并进入插入模式。</li><li><code>C</code>：删除从光标到行尾并进入插入模式。</li></ul></li></ul><ul><li><p>其他</p><ul><li><code>:w [filename]</code>  将编辑的数据储存成另一个档案（类似另存新档）</li><li><code>:r [filename]</code> 在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面</li><li><code>:n1,n2 w [filename]</code> 将 n1 到 n2 的内容储存成 filename 这个档案。</li><li><code>:! command</code> 暂时离开 vi 到指令行模式下执行 command 的显示结果！</li></ul></li><li><p>可视化模式</p><ul><li><p>v 进入字符可视化模式</p></li><li><p>V 进入行可视化模式</p></li><li><p>Ctrl+v 进入块可视化模式,块选择在表格中删除指定列非常有用</p></li></ul></li></ul><p>使用鼠标或者hjkl即可选中字符/行/块，然后可以y，x…<br>更有用的是对块批量操作，例如批量注释可以这么写<br><strong>批量注释：</strong><br>Ctrl + v 进入块选择模式，然后移动光标选中你要注释的行，再按大写的 I 进入行首插入模式输入注释符号如 // 或 #，输入完毕之后，按两下 ESC，Vim 会自动将你选中的所有行首都加上注释，保存退出完成注释。<br><strong>取消注释：</strong><br>Ctrl + v 进入块选择模式，选中你要删除的行首的注释符号，注意 // 要选中两个，选好之后按 d 即可删除注释，ESC 保存退出<br>还可以在选择文字后输入<code>:</code>然后把你在平时这么用的就怎么写，注意按<code>:</code>会多出一些东西不要管他,例如</p><figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">`:A //这是一堆注释` </span><br><span class="line"></span><br><span class="line">*   <span class="number">1</span></span><br></pre></td></tr></table></figure><p>然后Vim会根据你所写，先对每一样在Normal模式下使用<code>A</code>把光标移动到该行行尾，然后进入Insert模式输入<code>//这是一堆注释</code>对每一行都操作结束之后就会自动退出到Normal模式</p><p>按动<code>ZZ</code>(大写的)保存文件</p><h5 id="进阶快捷键"><a href="#进阶快捷键" class="headerlink" title="进阶快捷键"></a>进阶快捷键</h5><p><strong>窗口管理</strong></p><ul><li><code>:split</code> 或 <code>:sp</code>：水平分割窗口。</li><li><code>:vsplit</code> 或 <code>:vsp</code>：垂直分割窗口。</li><li><code>Ctrl + w + w</code>：切换窗口。</li><li><code>Ctrl + w + h</code>：移动到左侧窗口。</li><li><code>Ctrl + w + j</code>：移动到下方窗口。</li><li><code>Ctrl + w + k</code>：移动到上方窗口。</li><li><code>Ctrl + w + l</code>：移动到右侧窗口。</li><li><code>Ctrl + w + q</code>：关闭当前窗口。</li></ul><p><strong>标签页操作</strong></p><ul><li><code>:tabe</code>：打开一个新标签页。</li><li><code>:tabn</code> 或 <code>gt</code>：切换到下一个标签页。</li><li><code>:tabp</code> 或 <code>gT</code>：切换到上一个标签页。</li><li><code>:tabc</code>：关闭当前标签页。</li><li><code>:tabo</code>：关闭所有其他标签页。</li></ul><p><strong>宏录制与播放</strong></p><ul><li><code>q</code> + <code>a-z</code>：开始录制宏，将操作记录到指定的寄存器 <code>a-z</code> 中。</li><li><code>q</code>：停止录制。</li><li><code>@a</code>：播放寄存器 <code>a</code> 中的宏。</li><li><code>@@</code>：重复上一次播放的宏。</li></ul><p><strong>寄存器操作</strong></p><ul><li><code>&quot;a</code> + <code>yy</code>：将当前行复制到寄存器 <code>a</code>。</li><li><code>&quot;b</code> + <code>p</code>：从寄存器 <code>b</code> 粘贴内容。</li></ul><p><strong>块操作</strong></p><ul><li><code>Ctrl + v</code>：进入可视块模式。</li><li><code>Shift + i</code>：进入插入模式，批量插入字符。</li><li><code>Shift + a</code>：进入插入模式，批量在行尾追加内容。</li></ul><h5 id="自定义快捷键"><a href="#自定义快捷键" class="headerlink" title="自定义快捷键"></a>自定义快捷键</h5><p>在 <code>.vimrc</code> 中设置自定义快捷键</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot; 快速保存</span><br><span class="line">nnoremap &lt;C-s&gt; :w&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; 快速退出</span><br><span class="line">nnoremap &lt;C-q&gt; :q&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; 撤销高亮</span><br><span class="line">nnoremap &lt;C-l&gt; :nohlsearch&lt;CR&gt;</span><br><span class="line"></span><br><span class="line">&quot; 快速复制到系统剪贴板</span><br><span class="line">vnoremap &lt;C-c&gt; &quot;+y</span><br></pre></td></tr></table></figure><h5 id="其他常用快捷键"><a href="#其他常用快捷键" class="headerlink" title="其他常用快捷键"></a>其他常用快捷键</h5><p><strong>自动补全</strong></p><ul><li><code>Ctrl + n</code>：向下选择补全项。</li><li><code>Ctrl + p</code>：向上选择补全项。</li></ul><p><strong>缩进</strong></p><ul><li><code>&gt;&gt;</code>：将当前行右缩进。</li><li><code>&lt;&lt;</code>：将当前行左缩进。</li><li><code>=</code>：自动调整缩进（可以配合 <code>v</code> 可视模式选择多行使用）。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS修改用户名和密码</title>
      <link href="/2024/04/09/CentOS%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/"/>
      <url>/2024/04/09/CentOS%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p><strong>1、更改用户名</strong></p><ul><li><code>usermod</code> 命令修改现有用户的用户名</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo usermod -l newuser olduser</span><br></pre></td></tr></table></figure><ul><li><code>usermod</code> 命令用户的 home 目录名称</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo usermod -m -d /home/newuser newuser</span><br></pre></td></tr></table></figure><p><code>-m</code> 选项会移动旧的 home 目录到新的位置。</p><p><strong>2、更改用户密码</strong></p><p><code>passwd</code> 命令更改密码</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo passwd newuser</span><br></pre></td></tr></table></figure><h3 id="更改登录界面的用户名"><a href="#更改登录界面的用户名" class="headerlink" title="更改登录界面的用户名"></a>更改登录界面的用户名</h3><p><strong>1、检查并修改显示管理器配置(?怎么查看显示管理器配置)</strong></p><p>​    显示管理器（如 GNOME 的 GDM 或 LightDM）可能缓存旧的用户名。尝试重启系统或重启显示管理器服务，让它加载新的用户名配置。</p><ul><li><strong>重启显示管理器服务（以 GDM 为例）</strong></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart gdm</span><br></pre></td></tr></table></figure><p><strong>2、更新用户显示名</strong></p><p>除了用户名，系统还可能使用用户的显示名。在修改用户名的同时，你可能还需要更新用户的显示名，这涉及 <code>/etc/passwd</code> 文件。</p><ul><li>查看当前用户的显示名</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd | grep newuser</span><br><span class="line"><span class="comment">#输出类似于以下内容(ruby)：</span></span><br><span class="line">newuser:x:1001:1001:Old Name,,,:/home/newuser:/bin/bash</span><br></pre></td></tr></table></figure><p>在上面输出中，<code>Old Name</code> 是显示在登录界面中的用户显示名。你可以使用以下命令修改它：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo usermod -c <span class="string">&quot;New Name&quot;</span> newuser</span><br></pre></td></tr></table></figure><p><strong>3、确保没有残留的旧用户名配置</strong></p><p>有时用户的登录信息可能会残留在系统其他位置，你可以检查 <code>~/.config</code> 目录下的相关配置文件，确保没有与旧用户名相关的条目。</p><ul><li><p><strong>打开终端</strong></p></li><li><p><strong>进入用户的配置目录</strong></p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.config</span><br></pre></td></tr></table></figure><ul><li><strong>列出文件</strong></li></ul><p>使用 <code>ls</code> 命令列出该目录中的所有文件和子目录：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -la</span><br></pre></td></tr></table></figure><ul><li><strong>查找与旧用户名相关的条目</strong></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep -r <span class="string">&quot;olduser&quot;</span> .</span><br></pre></td></tr></table></figure><ul><li><strong>查找并替换所有匹配项旧用户名</strong>：</li></ul><p>正常模式下使用命令：<code>:%s/castiel/newuser/g</code></p><ul><li><strong>检查和编辑相关文件</strong></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano path/to/your/file.conf</span><br></pre></td></tr></table></figure><h3 id="使用-nano-编辑文件"><a href="#使用-nano-编辑文件" class="headerlink" title="使用 nano 编辑文件"></a>使用 <code>nano</code> 编辑文件</h3><ul><li><strong>打开文件</strong> 使用 <code>nano</code> 打开你想编辑的文件。例如，如果文件路径是 <code>/home/username/.config/example.conf</code>，你可以使用以下命令：</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nano /home/username/.config/example.conf</span><br></pre></td></tr></table></figure><ul><li><p><strong>查找旧用户名</strong> 在 <code>nano</code> 中，你可以使用 <code>Ctrl + W</code> 组合键打开查找功能。在提示符下输入你的旧用户名（例如 <code>olduser</code>），然后按回车键。<code>nano</code> 会跳转到第一个匹配的条目。</p></li><li><p><strong>编辑内容</strong> 找到旧用户名后，直接使用键盘输入新用户名（例如 <code>newuser</code>）来替换它。编辑完成后，按 <code>Ctrl + O</code>（字母 O）保存更改。</p></li><li><p><strong>退出 <code>nano</code></strong> 按 <code>Ctrl + X</code> 退出 <code>nano</code>。如果你有未保存的更改，<code>nano</code> 会提示你保存更改。</p></li></ul><p><strong>使用 <code>vim</code> 编辑文件</strong></p><ul><li><strong>打开文件</strong> 使用 <code>vim</code> 打开你想编辑的文件，例如：</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /home/username/.config/example.conf</span><br></pre></td></tr></table></figure><ul><li><p><strong>进入插入模式</strong> 打开文件后，你需要按 <code>i</code> 键进入插入模式，以便编辑内容。</p></li><li><p><strong>查找旧用户名</strong> 在正常模式下（按 <code>Esc</code> 键返回正常模式），输入以下命令进行查找：</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/olduser</span><br></pre></td></tr></table></figure><p>然后按回车键，<code>vim</code> 会跳转到第一个匹配的条目。</p><ul><li><p><strong>编辑内容</strong> 进入插入模式后，找到旧用户名并替换为新用户名。完成后按 <code>Esc</code> 返回正常模式。</p></li><li><p><strong>保存更改并退出</strong> 在正常模式下，输入以下命令并按回车键以保存更改并退出：</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure><ul><li><strong>其他目录</strong></li></ul><p>如果在 <code>~/.config</code> 目录下没有找到旧用户名的相关条目，可能需要检查其他位置，例如：</p><ul><li><code>~/.local/share</code>：该目录下可能存放了一些与应用程序相关的配置文件。</li><li><code>/etc</code>：系统级的配置文件，有时某些服务或应用会存储与用户相关的配置。</li><li>使用相似的 <code>grep</code> 命令在这些目录下进行搜索：</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep -r <span class="string">&quot;olduser&quot;</span> ~/.local/share</span><br><span class="line">grep -r <span class="string">&quot;olduser&quot;</span> /etc</span><br></pre></td></tr></table></figure><p><strong>4、重启系统，让所有配置刷新加载。</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>使用 <code>usermod -l newuser olduser</code> 更改用户名。</li><li>使用 <code>usermod -m -d /home/newuser newuser</code> 更改 home 目录名称（可选）。</li><li>使用 <code>passwd newuser</code> 更改用户密码。</li><li>重启显示管理器以确保加载新的用户名。</li><li>修改用户显示名（如需要）使用 <code>usermod -c</code> 命令。</li><li>检查是否有其他地方缓存了旧用户名，特别是用户配置文件。在 <code>~/.config</code> 目录中检查是否有与旧用户名相关的配置文件，使用 <code>grep</code> 命令搜索旧用户名并修改相关文件。检查其他目录以确保没有残留的配置。</li><li>重启系统确保所有更改生效。</li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
